#!/usr/bin/env python3
"""
Simple test script to test doctor search with specific queries.
"""

import asyncio
import sys
import os

# Add the backend directory to the Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_database
from app.services.atlasSearchService import DoctorSearchService

async def test_simple_search():
    """Test doctor search with simple queries"""
    print("üß™ Simple Doctor Search Testing...")
    
    try:
        db = get_database()
        doctor_search_service = DoctorSearchService()
        
        # Test queries that would be generated by the system
        test_queries = [
            "general practitioner fever",
            "general practitioner",
            "cardiologist",
            "ent specialist"
        ]
        
        for query in test_queries:
            print(f"\n{'='*50}")
            print(f"Testing query: '{query}'")
            print(f"{'='*50}")
            
            # Test fallback search
            print(f"\n1. Testing fallback search...")
            result = await doctor_search_service.fallback_search(db, query)
            if result["success"]:
                print(f"‚úÖ Found {len(result['doctors'])} doctors")
                for i, doctor in enumerate(result["doctors"], 1):
                    print(f"   {i}. {doctor['name']} ({doctor['specialization']})")
                    print(f"      Location: {doctor['location']}")
                    print(f"      Contact: {doctor['contact']}")
            else:
                print(f"‚ùå Failed: {result.get('error', 'Unknown error')}")
            
            # Test Atlas search
            print(f"\n2. Testing Atlas search...")
            result = await doctor_search_service.search_doctors(db, query)
            if result["success"]:
                print(f"‚úÖ Found {len(result['doctors'])} doctors")
                for i, doctor in enumerate(result["doctors"], 1):
                    print(f"   {i}. {doctor['name']} ({doctor['specialization']})")
                    print(f"      Location: {doctor['location']}")
                    print(f"      Contact: {doctor['contact']}")
            else:
                print(f"‚ùå Failed: {result.get('error', 'Unknown error')}")
        
        print(f"\n{'='*50}")
        print("üéâ Simple search tests completed!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå Test failed with error: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("Starting simple doctor search tests...")
    success = asyncio.run(test_simple_search())
    
    if success:
        print("\n‚úÖ All tests completed successfully!")
    else:
        print("\n‚ùå Tests failed!")
        sys.exit(1)